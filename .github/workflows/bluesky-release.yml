name: Post to BlueSky on Release

on:
  release:
    types: [published]

jobs:
  post-to-bluesky:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Extract repository information
        id: repo-info
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          REPO="${{ github.repository }}"
          EXTENSION="${REPO#${{ github.repository_owner }}/quarto-}"
          EXTENSION=${EXTENSION#revealjs-}

          # Get repository description using GitHub CLI
          DESCRIPTION=$(gh repo view --json description --jq '.description // "A Quarto extension"')

          echo "extension=${EXTENSION}" >> $GITHUB_OUTPUT
          echo "description=${DESCRIPTION}" >> $GITHUB_OUTPUT
          echo "version=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT

      - name: Create BlueSky post
        env:
          BLUESKY_USERNAME: ${{ secrets.BLUESKY_USERNAME }}
          BLUESKY_PASSWORD: ${{ secrets.BLUESKY_PASSWORD }}
          EXTENSION_NAME: ${{ steps.repo-info.outputs.extension }}
          DESCRIPTION: ${{ steps.repo-info.outputs.description }}
          VERSION: ${{ steps.repo-info.outputs.version }}
          REPO_URL: ${{ github.server_url }}/${{ github.repository }}
        shell: bash
        run: |
          npm install @atproto/api

          cat > post-to-bluesky.js << 'EOF'
          const { BskyAgent } = require('@atproto/api');

          async function main() {
            const agent = new BskyAgent({
              service: 'https://bsky.social'
            });
            
            try {
              await agent.login({
                identifier: process.env.BLUESKY_USERNAME,
                password: process.env.BLUESKY_PASSWORD
              });
              
              const extensionName = process.env.EXTENSION_NAME;
              const description = process.env.DESCRIPTION;
              const version = process.env.VERSION;
              const repoUrl = process.env.REPO_URL;
              
              const postText = `🎉 New release of ${extensionName}!\n\n${description}\n\nVersion: ${version}\n\n📦 ${repoUrl}\n\n#Quarto #QuartoPub #DataScience #OpenSource`;
              
              console.log('Posting to BlueSky:', postText);
              
              const result = await agent.post({
                text: postText
              });
              
              console.log('Successfully posted to BlueSky!');
              console.log('Post URI:', result.uri);
              
            } catch (error) {
              console.error('Error posting to BlueSky:', error);
              process.exit(1);
            }
          }

          main();
          EOF

          node post-to-bluesky.js

      - name: Summary
        if: always()
        shell: bash
        run: |
          (
            echo "## 🦋 BlueSky Post Summary"
            echo ""
            echo "| Field | Value |"
            echo "|-------|--------|"
            echo "| Extension | \`${{ steps.repo-info.outputs.extension }}\` |"
            echo "| Version | \`${{ steps.repo-info.outputs.version }}\` |"
            echo "| Description | ${{ steps.repo-info.outputs.description }} |"
            echo "| Repository | [${{ steps.repo-info.outputs.repo_url }}](${{ steps.repo-info.outputs.repo_url }}) |"
            echo ""
            if [ "${{ job.status }}" == "success" ]; then
              echo "✅ Successfully posted to BlueSky!"
            else
              echo "❌ Failed to post to BlueSky!"
            fi
          ) >> $GITHUB_STEP_SUMMARY
